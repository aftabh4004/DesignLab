
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftPLUSMINUSleftTIMESDIVIDEMODrightEXPrightUMINUSASSIGN DIVIDE EQUALS EXP ID LPAREN MINUS MOD NUMBER PLUS POSTFIX PREFIX RPAREN TIMESstart : PREFIX LPAREN prefix RPARENstart : ID ASSIGN expressionstart : expressionprefix : NUMBER PLUS NUMBERexpression : subexpression EQUALS subexpressionexpression : subexpressionsubexpression : subexpression PLUS termsubexpression : subexpression MINUS termsubexpression : termterm : term TIMES factorterm : term DIVIDE factorterm : term MOD factorterm : factorfactor : pow EXP factorfactor : powpow : NUMBERpow : IDpow : MINUS pow %prec UMINUSpow : LPAREN expression RPAREN'
    
_lr_action_items = {'PREFIX':([0,],[2,]),'ID':([0,3,8,15,16,17,18,19,20,21,23,],[4,14,14,14,14,14,14,14,14,14,14,]),'NUMBER':([0,3,8,12,15,16,17,18,19,20,21,23,36,],[11,11,11,25,11,11,11,11,11,11,11,11,37,]),'MINUS':([0,3,4,6,7,8,9,10,11,14,15,16,17,18,19,20,21,22,23,26,28,29,30,31,32,33,34,],[8,8,-17,18,-9,8,-13,-15,-16,-17,8,8,8,8,8,8,8,-18,8,-19,18,-7,-8,-10,-11,-12,-14,]),'LPAREN':([0,2,3,8,15,16,17,18,19,20,21,23,],[3,12,3,3,3,3,3,3,3,3,3,3,]),'$end':([1,4,5,6,7,9,10,11,14,22,26,27,28,29,30,31,32,33,34,35,],[0,-17,-3,-6,-9,-13,-15,-16,-17,-18,-19,-2,-5,-7,-8,-10,-11,-12,-14,-1,]),'ASSIGN':([4,],[15,]),'EXP':([4,10,11,14,22,26,],[-17,23,-16,-17,-18,-19,]),'TIMES':([4,7,9,10,11,14,22,26,29,30,31,32,33,34,],[-17,19,-13,-15,-16,-17,-18,-19,19,19,-10,-11,-12,-14,]),'DIVIDE':([4,7,9,10,11,14,22,26,29,30,31,32,33,34,],[-17,20,-13,-15,-16,-17,-18,-19,20,20,-10,-11,-12,-14,]),'MOD':([4,7,9,10,11,14,22,26,29,30,31,32,33,34,],[-17,21,-13,-15,-16,-17,-18,-19,21,21,-10,-11,-12,-14,]),'EQUALS':([4,6,7,9,10,11,14,22,26,29,30,31,32,33,34,],[-17,16,-9,-13,-15,-16,-17,-18,-19,-7,-8,-10,-11,-12,-14,]),'PLUS':([4,6,7,9,10,11,14,22,25,26,28,29,30,31,32,33,34,],[-17,17,-9,-13,-15,-16,-17,-18,36,-19,17,-7,-8,-10,-11,-12,-14,]),'RPAREN':([6,7,9,10,11,13,14,22,24,26,28,29,30,31,32,33,34,37,],[-6,-9,-13,-15,-16,26,-17,-18,35,-19,-5,-7,-8,-10,-11,-12,-14,-4,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'start':([0,],[1,]),'expression':([0,3,15,],[5,13,27,]),'subexpression':([0,3,15,16,],[6,6,6,28,]),'term':([0,3,15,16,17,18,],[7,7,7,7,29,30,]),'factor':([0,3,15,16,17,18,19,20,21,23,],[9,9,9,9,9,9,31,32,33,34,]),'pow':([0,3,8,15,16,17,18,19,20,21,23,],[10,10,22,10,10,10,10,10,10,10,10,]),'prefix':([12,],[24,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> start","S'",1,None,None,None),
  ('start -> PREFIX LPAREN prefix RPAREN','start',4,'p_start_prefix','yacc.py',18),
  ('start -> ID ASSIGN expression','start',3,'p_start_assinment','yacc.py',22),
  ('start -> expression','start',1,'p_start_expression','yacc.py',27),
  ('prefix -> NUMBER PLUS NUMBER','prefix',3,'p_prefix_num','yacc.py',32),
  ('expression -> subexpression EQUALS subexpression','expression',3,'p_start_equals','yacc.py',36),
  ('expression -> subexpression','expression',1,'p_exp_subexp','yacc.py',44),
  ('subexpression -> subexpression PLUS term','subexpression',3,'p_expression_plus','yacc.py',48),
  ('subexpression -> subexpression MINUS term','subexpression',3,'p_expression_minus','yacc.py',55),
  ('subexpression -> term','subexpression',1,'p_expression_term','yacc.py',64),
  ('term -> term TIMES factor','term',3,'p_term_times','yacc.py',68),
  ('term -> term DIVIDE factor','term',3,'p_term_div','yacc.py',72),
  ('term -> term MOD factor','term',3,'p_term_mod','yacc.py',82),
  ('term -> factor','term',1,'p_term_factor','yacc.py',93),
  ('factor -> pow EXP factor','factor',3,'p_pow_factor','yacc.py',97),
  ('factor -> pow','factor',1,'p_factor_pow','yacc.py',101),
  ('pow -> NUMBER','pow',1,'p_pow_num','yacc.py',105),
  ('pow -> ID','pow',1,'p_pow_id','yacc.py',109),
  ('pow -> MINUS pow','pow',2,'p_expr_uminus','yacc.py',117),
  ('pow -> LPAREN expression RPAREN','pow',3,'p_pow_expr','yacc.py',122),
]
